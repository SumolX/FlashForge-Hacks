#!/bin/ash

# Includes
. ./constants
. ./utils

# Handle: cgi-bin/printer?cancel
on_cancel() {
    echo "~M26\r\n" | nc localhost 8899 2>/dev/null
    echo "Status: 200 OK"
}

# Handle: cgi-bin/printer?resume
on_resume() {
    echo "~M24\r\n" | nc localhost 8899 2>/dev/null
    echo "Status: 200 OK"
}

# Handle: cgi-bin/printer?pause
on_pause() {
    echo "~M25\r\n" | nc localhost 8899 2>/dev/null
    echo "Status: 200 OK"
}

# Handle: cgi-bin/printer?temperature
on_temperature() {
    echo "Content-type: text/html"
    echo ""
    echo "~M105\r\n" | nc localhost 8899
}

# Handle: cgi-bin/printer?status
on_status() {
    echo "Content-type: text/html"
    echo ""
    echo "~M27\r\n" | nc localhost 8899
}

# Handle: cgi-bin/printer?endstop
on_endstop() {
    echo "Content-type: text/html"
    echo ""
    echo "~M119\r\n" | nc localhost 8899
}

# Handle: cgi-bin/printer?camera
on_camera() {
    echo "Content-type: text/html"
    echo ""
    utils_get_camera_url
}

# Handle: cgi-bin/printer?camera-url-store=value
on_camera_url_store() {
    mkdir -p $CONF_PATH
    echo "$1" > $CONF_PATH/camera-url.cfg
    echo "Status: 200 OK"
}

# Handle: cgi-bin/printer?camera-url-clear
on_camera_url_clear() {
    rm -rf $CONF_PATH/camera-url.cfg
    echo "Status: 200 OK"
}

# Parse Requests
if [ -z $QUERY_STRING ]; then
    return "Status: 400 Bad Request"
else
    IFS="&"
    set -- $QUERY_STRING
    key="${1%=*}"
    if [ ${key} == "cancel" ]; then
        on_cancel
    elif [ ${key} == "resume" ]; then
        on_resume
    elif [ ${key} == "pause" ]; then
        on_pause
    elif [ ${key} == "temperature" ]; then
        on_temperature
    elif [ ${key} == "status" ]; then
        on_status
    elif [ ${key} == "endstop" ]; then
        on_endstop
    elif [ ${key} == "camera-url-store" ]; then
        on_camera_url_store "${1#*=}"
    elif [ ${key} == "camera-url-clear" ]; then
        on_camera_url_clear
    elif [ ${key} == "camera" ]; then
        on_camera
    else
        echo "Status: 400 Bad Request"
    fi
fi
